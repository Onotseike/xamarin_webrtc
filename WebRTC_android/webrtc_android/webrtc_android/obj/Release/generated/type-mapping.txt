org/webrtc/audio/AudioDeviceModule = Org.Webrtc.Audio.IAudioDeviceModule
  getNativeAudioDeviceModulePointer()J = NativeAudioDeviceModulePointer
  release()V = Release()
  setMicrophoneMute(Z)V = SetMicrophoneMute(bool)
  setSpeakerMute(Z)V = SetSpeakerMute(bool)
org/webrtc/audio/JavaAudioDeviceModule = Org.Webrtc.Audio.JavaAudioDeviceModule
  isBuiltInAcousticEchoCancelerSupported()Z = IsBuiltInAcousticEchoCancelerSupported
  isBuiltInNoiseSuppressorSupported()Z = IsBuiltInNoiseSuppressorSupported
  getNativeAudioDeviceModulePointer()J = NativeAudioDeviceModulePointer
  builder(Landroid/content/Context;)Lorg/webrtc/audio/JavaAudioDeviceModule$Builder; = InvokeBuilder(Android.Content.Context)
  release()V = Release()
  setMicrophoneMute(Z)V = SetMicrophoneMute(bool)
  setPreferredInputDevice(Landroid/media/AudioDeviceInfo;)V = SetPreferredInputDevice(Android.Media.AudioDeviceInfo)
  setSpeakerMute(Z)V = SetSpeakerMute(bool)
org/webrtc/AudioDecoderFactoryFactory = Org.Webrtc.IAudioDecoderFactoryFactory
  createNativeAudioDecoderFactory()J = CreateNativeAudioDecoderFactory()
org/webrtc/AudioEncoderFactoryFactory = Org.Webrtc.IAudioEncoderFactoryFactory
  createNativeAudioEncoderFactory()J = CreateNativeAudioEncoderFactory()
org/webrtc/AudioProcessingFactory = Org.Webrtc.IAudioProcessingFactory
  createNative()J = CreateNative()
org/webrtc/AudioSource = Org.Webrtc.AudioSource
  <init>(J)V = .ctor(long)
org/webrtc/AudioTrack = Org.Webrtc.AudioTrack
  <init>(J)V = .ctor(long)
  setVolume(D)V = SetVolume(double)
org/webrtc/BuiltinAudioDecoderFactoryFactory = Org.Webrtc.BuiltinAudioDecoderFactoryFactory
  <init>()V = .ctor()
  createNativeAudioDecoderFactory()J = CreateNativeAudioDecoderFactory()
org/webrtc/BuiltinAudioEncoderFactoryFactory = Org.Webrtc.BuiltinAudioEncoderFactoryFactory
  <init>()V = .ctor()
  createNativeAudioEncoderFactory()J = CreateNativeAudioEncoderFactory()
org/webrtc/CalledByNative = Org.Webrtc.ICalledByNative
  value()Ljava/lang/String; = Value()
org/webrtc/CalledByNativeUnchecked = Org.Webrtc.ICalledByNativeUnchecked
  value()Ljava/lang/String; = Value()
org/webrtc/CallSessionFileRotatingLogSink = Org.Webrtc.CallSessionFileRotatingLogSink
  <init>(Ljava/lang/String;ILorg/webrtc/Logging$Severity;)V = .ctor(string, int, Org.Webrtc.Logging.Severity)
  dispose()V = Dispose()
  getLogData(Ljava/lang/String;)[B = GetLogData(string)
org/webrtc/Camera1Capturer = Org.Webrtc.Camera1Capturer
  <init>(Ljava/lang/String;Lorg/webrtc/CameraVideoCapturer$CameraEventsHandler;Z)V = .ctor(string, Org.Webrtc.ICameraVideoCapturerCameraEventsHandler, bool)
  getCameraName()Ljava/lang/String; = CameraName
  isScreencast()Z = IsScreencast
  changeCaptureFormat(III)V = ChangeCaptureFormat(int, int, int)
  dispose()V = Dispose()
  initialize(Lorg/webrtc/SurfaceTextureHelper;Landroid/content/Context;Lorg/webrtc/CapturerObserver;)V = Initialize(Org.Webrtc.SurfaceTextureHelper, Android.Content.Context, Org.Webrtc.ICapturerObserver)
  printStackTrace()V = PrintStackTrace()
  startCapture(III)V = StartCapture(int, int, int)
  stopCapture()V = StopCapture()
  switchCamera(Lorg/webrtc/CameraVideoCapturer$CameraSwitchHandler;)V = SwitchCamera(Org.Webrtc.ICameraVideoCapturerCameraSwitchHandler)
  switchCamera(Lorg/webrtc/CameraVideoCapturer$CameraSwitchHandler;Ljava/lang/String;)V = SwitchCamera(Org.Webrtc.ICameraVideoCapturerCameraSwitchHandler, string)
org/webrtc/Camera1Enumerator = Org.Webrtc.Camera1Enumerator
  <init>()V = .ctor()
  <init>(Z)V = .ctor(bool)
  createCapturer(Ljava/lang/String;Lorg/webrtc/CameraVideoCapturer$CameraEventsHandler;)Lorg/webrtc/CameraVideoCapturer; = CreateCapturer(string, Org.Webrtc.ICameraVideoCapturerCameraEventsHandler)
  getDeviceNames()[Ljava/lang/String; = GetDeviceNames()
  getSupportedFormats(Ljava/lang/String;)Ljava/util/List; = GetSupportedFormats(string)
  isBackFacing(Ljava/lang/String;)Z = IsBackFacing(string)
  isFrontFacing(Ljava/lang/String;)Z = IsFrontFacing(string)
org/webrtc/Camera2Capturer = Org.Webrtc.Camera2Capturer
  <init>(Landroid/content/Context;Ljava/lang/String;Lorg/webrtc/CameraVideoCapturer$CameraEventsHandler;)V = .ctor(Android.Content.Context, string, Org.Webrtc.ICameraVideoCapturerCameraEventsHandler)
  getCameraName()Ljava/lang/String; = CameraName
  isScreencast()Z = IsScreencast
  changeCaptureFormat(III)V = ChangeCaptureFormat(int, int, int)
  dispose()V = Dispose()
  initialize(Lorg/webrtc/SurfaceTextureHelper;Landroid/content/Context;Lorg/webrtc/CapturerObserver;)V = Initialize(Org.Webrtc.SurfaceTextureHelper, Android.Content.Context, Org.Webrtc.ICapturerObserver)
  printStackTrace()V = PrintStackTrace()
  startCapture(III)V = StartCapture(int, int, int)
  stopCapture()V = StopCapture()
  switchCamera(Lorg/webrtc/CameraVideoCapturer$CameraSwitchHandler;)V = SwitchCamera(Org.Webrtc.ICameraVideoCapturerCameraSwitchHandler)
  switchCamera(Lorg/webrtc/CameraVideoCapturer$CameraSwitchHandler;Ljava/lang/String;)V = SwitchCamera(Org.Webrtc.ICameraVideoCapturerCameraSwitchHandler, string)
org/webrtc/Camera2Enumerator = Org.Webrtc.Camera2Enumerator
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  createCapturer(Ljava/lang/String;Lorg/webrtc/CameraVideoCapturer$CameraEventsHandler;)Lorg/webrtc/CameraVideoCapturer; = CreateCapturer(string, Org.Webrtc.ICameraVideoCapturerCameraEventsHandler)
  getDeviceNames()[Ljava/lang/String; = GetDeviceNames()
  getSupportedFormats(Ljava/lang/String;)Ljava/util/List; = GetSupportedFormats(string)
  isBackFacing(Ljava/lang/String;)Z = IsBackFacing(string)
  isFrontFacing(Ljava/lang/String;)Z = IsFrontFacing(string)
  isSupported(Landroid/content/Context;)Z = IsSupported(Android.Content.Context)
org/webrtc/CameraEnumerationAndroid = Org.Webrtc.CameraEnumerationAndroid
  <init>()V = .ctor()
  getClosestSupportedFramerateRange(Ljava/util/List;I)Lorg/webrtc/CameraEnumerationAndroid$CaptureFormat$FramerateRange; = GetClosestSupportedFramerateRange(System.Collections.Generic.IList<Org.Webrtc.CameraEnumerationAndroid.CaptureFormat.FramerateRange>, int)
  getClosestSupportedSize(Ljava/util/List;II)Lorg/webrtc/Size; = GetClosestSupportedSize(System.Collections.Generic.IList<Org.Webrtc.Size>, int, int)
org/webrtc/CameraEnumerator = Org.Webrtc.ICameraEnumerator
  createCapturer(Ljava/lang/String;Lorg/webrtc/CameraVideoCapturer$CameraEventsHandler;)Lorg/webrtc/CameraVideoCapturer; = CreateCapturer(string, Org.Webrtc.ICameraVideoCapturerCameraEventsHandler)
  getDeviceNames()[Ljava/lang/String; = GetDeviceNames()
  getSupportedFormats(Ljava/lang/String;)Ljava/util/List; = GetSupportedFormats(string)
  isBackFacing(Ljava/lang/String;)Z = IsBackFacing(string)
  isFrontFacing(Ljava/lang/String;)Z = IsFrontFacing(string)
org/webrtc/CameraVideoCapturer = Org.Webrtc.ICameraVideoCapturer
  switchCamera(Lorg/webrtc/CameraVideoCapturer$CameraSwitchHandler;)V = SwitchCamera(Org.Webrtc.ICameraVideoCapturerCameraSwitchHandler)
  switchCamera(Lorg/webrtc/CameraVideoCapturer$CameraSwitchHandler;Ljava/lang/String;)V = SwitchCamera(Org.Webrtc.ICameraVideoCapturerCameraSwitchHandler, string)
org/webrtc/CandidatePairChangeEvent = Org.Webrtc.CandidatePairChangeEvent
  lastDataReceivedMs = LastDataReceivedMs
  local = Local
  reason = Reason
  remote = Remote
org/webrtc/CapturerObserver = Org.Webrtc.ICapturerObserver
  onCapturerStarted(Z)V = OnCapturerStarted(bool)
  onCapturerStopped()V = OnCapturerStopped()
  onFrameCaptured(Lorg/webrtc/VideoFrame;)V = OnFrameCaptured(Org.Webrtc.VideoFrame)
org/webrtc/ContextUtils = Org.Webrtc.ContextUtils
  <init>()V = .ctor()
  getApplicationContext()Landroid/content/Context; = ApplicationContext
  initialize(Landroid/content/Context;)V = Initialize(Android.Content.Context)
org/webrtc/CryptoOptions = Org.Webrtc.CryptoOptions
  getSFrame()Lorg/webrtc/CryptoOptions$SFrame; = GetSFrame()
  getSrtp()Lorg/webrtc/CryptoOptions$Srtp; = GetSrtp()
  builder()Lorg/webrtc/CryptoOptions$Builder; = InvokeBuilder()
org/webrtc/DataChannel = Org.Webrtc.DataChannel
  <init>(J)V = .ctor(long)
  bufferedAmount()J = BufferedAmount()
  close()V = Close()
  dispose()V = Dispose()
  id()I = Id()
  state()Lorg/webrtc/DataChannel$State; = InvokeState()
  label()Ljava/lang/String; = Label()
  registerObserver(Lorg/webrtc/DataChannel$Observer;)V = RegisterObserver(Org.Webrtc.DataChannel.IObserver)
  send(Lorg/webrtc/DataChannel$Buffer;)Z = Send(Org.Webrtc.DataChannel.Buffer)
  unregisterObserver()V = UnregisterObserver()
org/webrtc/DefaultVideoDecoderFactory = Org.Webrtc.DefaultVideoDecoderFactory
  <init>(Lorg/webrtc/EglBase$Context;)V = .ctor(Org.Webrtc.IEglBaseContext)
  createDecoder(Lorg/webrtc/VideoCodecInfo;)Lorg/webrtc/VideoDecoder; = CreateDecoder(Org.Webrtc.VideoCodecInfo)
  getSupportedCodecs()[Lorg/webrtc/VideoCodecInfo; = GetSupportedCodecs()
org/webrtc/DefaultVideoEncoderFactory = Org.Webrtc.DefaultVideoEncoderFactory
  <init>(Lorg/webrtc/EglBase$Context;ZZ)V = .ctor(Org.Webrtc.IEglBaseContext, bool, bool)
  createEncoder(Lorg/webrtc/VideoCodecInfo;)Lorg/webrtc/VideoEncoder; = CreateEncoder(Org.Webrtc.VideoCodecInfo)
  getSupportedCodecs()[Lorg/webrtc/VideoCodecInfo; = GetSupportedCodecs()
org/webrtc/DtmfSender = Org.Webrtc.DtmfSender
  <init>(J)V = .ctor(long)
  canInsertDtmf()Z = CanInsertDtmf()
  dispose()V = Dispose()
  duration()I = Duration()
  insertDtmf(Ljava/lang/String;II)Z = InsertDtmf(string, int, int)
  interToneGap()I = InterToneGap()
  tones()Ljava/lang/String; = Tones()
org/webrtc/EglBase = Org.Webrtc.IEglBase
  CONFIG_PIXEL_BUFFER = ConfigPixelBuffer
  CONFIG_PIXEL_RGBA_BUFFER = ConfigPixelRgbaBuffer
  CONFIG_PLAIN = ConfigPlain
  CONFIG_RECORDABLE = ConfigRecordable
  CONFIG_RGBA = ConfigRgba
  EGL_OPENGL_ES2_BIT = EglOpenglEs2Bit
  EGL_OPENGL_ES3_BIT = EglOpenglEs3Bit
  EGL_RECORDABLE_ANDROID = EglRecordableAndroid
  lock = Lock
  getEglBaseContext()Lorg/webrtc/EglBase$Context; = EglBaseContext
  hasSurface()Z = HasSurface
  configBuilder()Lorg/webrtc/EglBase$ConfigBuilder; = ConfigBuilder()
  create()Lorg/webrtc/EglBase; = Create()
  create(Lorg/webrtc/EglBase$Context;)Lorg/webrtc/EglBase; = Create(Org.Webrtc.IEglBaseContext)
  create(Lorg/webrtc/EglBase$Context;[I)Lorg/webrtc/EglBase; = Create(Org.Webrtc.IEglBaseContext, int[])
  createDummyPbufferSurface()V = CreateDummyPbufferSurface()
  createEgl10([I)Lorg/webrtc/EglBase10; = CreateEgl10(int[])
  createEgl10(Ljavax/microedition/khronos/egl/EGLContext;[I)Lorg/webrtc/EglBase10; = CreateEgl10(Javax.Microedition.Khronos.Egl.EGLContext, int[])
  createEgl10(Lorg/webrtc/EglBase10$Context;[I)Lorg/webrtc/EglBase10; = CreateEgl10(Org.Webrtc.IEglBase10Context, int[])
  createEgl14(Landroid/opengl/EGLContext;[I)Lorg/webrtc/EglBase14; = CreateEgl14(Android.Opengl.EGLContext, int[])
  createEgl14([I)Lorg/webrtc/EglBase14; = CreateEgl14(int[])
  createEgl14(Lorg/webrtc/EglBase14$Context;[I)Lorg/webrtc/EglBase14; = CreateEgl14(Org.Webrtc.IEglBase14Context, int[])
  createPbufferSurface(II)V = CreatePbufferSurface(int, int)
  createSurface(Landroid/graphics/SurfaceTexture;)V = CreateSurface(Android.Graphics.SurfaceTexture)
  createSurface(Landroid/view/Surface;)V = CreateSurface(Android.Views.Surface)
  detachCurrent()V = DetachCurrent()
  getOpenGlesVersionFromConfig([I)I = GetOpenGlesVersionFromConfig(int[])
  makeCurrent()V = MakeCurrent()
  release()V = Release()
  releaseSurface()V = ReleaseSurface()
  surfaceHeight()I = SurfaceHeight()
  surfaceWidth()I = SurfaceWidth()
  swapBuffers()V = SwapBuffers()
  swapBuffers(J)V = SwapBuffers(long)
org/webrtc/EglBase10 = Org.Webrtc.IEglBase10
org/webrtc/EglBase14 = Org.Webrtc.IEglBase14
org/webrtc/EglRenderer = Org.Webrtc.EglRenderer
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Lorg/webrtc/VideoFrameDrawer;)V = .ctor(string, Org.Webrtc.VideoFrameDrawer)
  name = Name
  addFrameListener(Lorg/webrtc/EglRenderer$FrameListener;F)V = AddFrameListener(Org.Webrtc.EglRenderer.IFrameListener, float)
  addFrameListener(Lorg/webrtc/EglRenderer$FrameListener;FLorg/webrtc/RendererCommon$GlDrawer;)V = AddFrameListener(Org.Webrtc.EglRenderer.IFrameListener, float, Org.Webrtc.RendererCommon.IGlDrawer)
  addFrameListener(Lorg/webrtc/EglRenderer$FrameListener;FLorg/webrtc/RendererCommon$GlDrawer;Z)V = AddFrameListener(Org.Webrtc.EglRenderer.IFrameListener, float, Org.Webrtc.RendererCommon.IGlDrawer, bool)
  clearImage()V = ClearImage()
  clearImage(FFFF)V = ClearImage(float, float, float, float)
  createEglSurface(Landroid/graphics/SurfaceTexture;)V = CreateEglSurface(Android.Graphics.SurfaceTexture)
  createEglSurface(Landroid/view/Surface;)V = CreateEglSurface(Android.Views.Surface)
  disableFpsReduction()V = DisableFpsReduction()
  init(Lorg/webrtc/EglBase$Context;[ILorg/webrtc/RendererCommon$GlDrawer;)V = Init(Org.Webrtc.IEglBaseContext, int[], Org.Webrtc.RendererCommon.IGlDrawer)
  init(Lorg/webrtc/EglBase$Context;[ILorg/webrtc/RendererCommon$GlDrawer;Z)V = Init(Org.Webrtc.IEglBaseContext, int[], Org.Webrtc.RendererCommon.IGlDrawer, bool)
  onFrame(Lorg/webrtc/VideoFrame;)V = OnFrame(Org.Webrtc.VideoFrame)
  pauseVideo()V = PauseVideo()
  printStackTrace()V = PrintStackTrace()
  release()V = Release()
  releaseEglSurface(Ljava/lang/Runnable;)V = ReleaseEglSurface(Java.Lang.IRunnable)
  removeFrameListener(Lorg/webrtc/EglRenderer$FrameListener;)V = RemoveFrameListener(Org.Webrtc.EglRenderer.IFrameListener)
  setErrorCallback(Lorg/webrtc/EglRenderer$ErrorCallback;)V = SetErrorCallback(Org.Webrtc.EglRenderer.IErrorCallback)
  setFpsReduction(F)V = SetFpsReduction(float)
  setLayoutAspectRatio(F)V = SetLayoutAspectRatio(float)
  setMirror(Z)V = SetMirror(bool)
  setMirrorVertically(Z)V = SetMirrorVertically(bool)
org/webrtc/EncodedImage = Org.Webrtc.EncodedImage
  buffer = Buffer
  captureTimeMs = CaptureTimeMs
  captureTimeNs = CaptureTimeNs
  completeFrame = CompleteFrame
  encodedHeight = EncodedHeight
  encodedWidth = EncodedWidth
  frameType = FrameType
  qp = Qp
  rotation = Rotation
  builder()Lorg/webrtc/EncodedImage$Builder; = InvokeBuilder()
  release()V = Release()
  retain()V = Retain()
org/webrtc/FecControllerFactoryFactoryInterface = Org.Webrtc.IFecControllerFactoryFactoryInterface
  createNative()J = CreateNative()
org/webrtc/FileVideoCapturer = Org.Webrtc.FileVideoCapturer
  <init>(Ljava/lang/String;)V = .ctor(string)
  isScreencast()Z = IsScreencast
  changeCaptureFormat(III)V = ChangeCaptureFormat(int, int, int)
  dispose()V = Dispose()
  initialize(Lorg/webrtc/SurfaceTextureHelper;Landroid/content/Context;Lorg/webrtc/CapturerObserver;)V = Initialize(Org.Webrtc.SurfaceTextureHelper, Android.Content.Context, Org.Webrtc.ICapturerObserver)
  startCapture(III)V = StartCapture(int, int, int)
  stopCapture()V = StopCapture()
  tick()V = Tick()
org/webrtc/FrameDecryptor = Org.Webrtc.IFrameDecryptor
  getNativeFrameDecryptor()J = NativeFrameDecryptor
org/webrtc/FrameEncryptor = Org.Webrtc.IFrameEncryptor
  getNativeFrameEncryptor()J = NativeFrameEncryptor
org/webrtc/GlRectDrawer = Org.Webrtc.GlRectDrawer
  <init>()V = .ctor()
  drawOes(I[FIIIIII)V = DrawOes(int, float[], int, int, int, int, int, int)
  drawRgb(I[FIIIIII)V = DrawRgb(int, float[], int, int, int, int, int, int)
  drawYuv([I[FIIIIII)V = DrawYuv(int[], float[], int, int, int, int, int, int)
  release()V = Release()
org/webrtc/GlShader = Org.Webrtc.GlShader
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  getAttribLocation(Ljava/lang/String;)I = GetAttribLocation(string)
  getUniformLocation(Ljava/lang/String;)I = GetUniformLocation(string)
  release()V = Release()
  setVertexAttribArray(Ljava/lang/String;IILjava/nio/FloatBuffer;)V = SetVertexAttribArray(string, int, int, Java.Nio.FloatBuffer)
  setVertexAttribArray(Ljava/lang/String;ILjava/nio/FloatBuffer;)V = SetVertexAttribArray(string, int, Java.Nio.FloatBuffer)
  useProgram()V = UseProgram()
org/webrtc/GlTextureFrameBuffer = Org.Webrtc.GlTextureFrameBuffer
  <init>(I)V = .ctor(int)
  getFrameBufferId()I = FrameBufferId
  getHeight()I = Height
  getTextureId()I = TextureId
  getWidth()I = Width
  release()V = Release()
  setSize(II)V = SetSize(int, int)
org/webrtc/GlUtil = Org.Webrtc.GlUtil
  checkNoGLES2Error(Ljava/lang/String;)V = CheckNoGLES2Error(string)
  createFloatBuffer([F)Ljava/nio/FloatBuffer; = CreateFloatBuffer(float[])
  generateTexture(I)I = GenerateTexture(int)
org/webrtc/HardwareVideoDecoderFactory = Org.Webrtc.HardwareVideoDecoderFactory
  <init>()V = .ctor()
  <init>(Lorg/webrtc/EglBase$Context;)V = .ctor(Org.Webrtc.IEglBaseContext)
  <init>(Lorg/webrtc/EglBase$Context;Lorg/webrtc/Predicate;)V = .ctor(Org.Webrtc.IEglBaseContext, Org.Webrtc.IPredicate)
  createDecoder(Lorg/webrtc/VideoCodecInfo;)Lorg/webrtc/VideoDecoder; = CreateDecoder(Org.Webrtc.VideoCodecInfo)
  getSupportedCodecs()[Lorg/webrtc/VideoCodecInfo; = GetSupportedCodecs()
org/webrtc/HardwareVideoEncoderFactory = Org.Webrtc.HardwareVideoEncoderFactory
  <init>(Lorg/webrtc/EglBase$Context;ZZ)V = .ctor(Org.Webrtc.IEglBaseContext, bool, bool)
  <init>(Lorg/webrtc/EglBase$Context;ZZLorg/webrtc/Predicate;)V = .ctor(Org.Webrtc.IEglBaseContext, bool, bool, Org.Webrtc.IPredicate)
  <init>(ZZ)V = .ctor(bool, bool)
  createEncoder(Lorg/webrtc/VideoCodecInfo;)Lorg/webrtc/VideoEncoder; = CreateEncoder(Org.Webrtc.VideoCodecInfo)
  getSupportedCodecs()[Lorg/webrtc/VideoCodecInfo; = GetSupportedCodecs()
org/webrtc/IceCandidate = Org.Webrtc.IceCandidate
  <init>(Ljava/lang/String;ILjava/lang/String;)V = .ctor(string, int, string)
  adapterType = AdapterType
  sdp = Sdp
  sdpMid = SdpMid
  sdpMLineIndex = SdpMLineIndex
  serverUrl = ServerUrl
org/webrtc/JavaI420Buffer = Org.Webrtc.JavaI420Buffer
  getDataU()Ljava/nio/ByteBuffer; = DataU
  getDataV()Ljava/nio/ByteBuffer; = DataV
  getDataY()Ljava/nio/ByteBuffer; = DataY
  getHeight()I = Height
  getStrideU()I = StrideU
  getStrideV()I = StrideV
  getStrideY()I = StrideY
  getWidth()I = Width
  allocate(II)Lorg/webrtc/JavaI420Buffer; = Allocate(int, int)
  cropAndScale(IIIIII)Lorg/webrtc/VideoFrame$Buffer; = CropAndScale(int, int, int, int, int, int)
  cropAndScaleI420(Lorg/webrtc/VideoFrame$I420Buffer;IIIIII)Lorg/webrtc/VideoFrame$Buffer; = CropAndScaleI420(Org.Webrtc.VideoFrame.II420Buffer, int, int, int, int, int, int)
  release()V = Release()
  retain()V = Retain()
  toI420()Lorg/webrtc/VideoFrame$I420Buffer; = ToI420()
  wrap(IILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/lang/Runnable;)Lorg/webrtc/JavaI420Buffer; = Wrap(int, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Lang.IRunnable)
org/webrtc/JniCommon = Org.Webrtc.JniCommon
  <init>()V = .ctor()
  nativeAddRef(J)V = NativeAddRef(long)
  nativeAllocateByteBuffer(I)Ljava/nio/ByteBuffer; = NativeAllocateByteBuffer(int)
  nativeFreeByteBuffer(Ljava/nio/ByteBuffer;)V = NativeFreeByteBuffer(Java.Nio.ByteBuffer)
  nativeReleaseRef(J)V = NativeReleaseRef(long)
org/webrtc/LibvpxVp8Decoder = Org.Webrtc.LibvpxVp8Decoder
  <init>()V = .ctor()
  createNativeVideoDecoder()J = CreateNativeVideoDecoder()
org/webrtc/LibvpxVp8Encoder = Org.Webrtc.LibvpxVp8Encoder
  <init>()V = .ctor()
  isHardwareEncoder()Z = IsHardwareEncoder
  createNativeVideoEncoder()J = CreateNativeVideoEncoder()
org/webrtc/LibvpxVp9Decoder = Org.Webrtc.LibvpxVp9Decoder
  <init>()V = .ctor()
  createNativeVideoDecoder()J = CreateNativeVideoDecoder()
org/webrtc/LibvpxVp9Encoder = Org.Webrtc.LibvpxVp9Encoder
  <init>()V = .ctor()
  isHardwareEncoder()Z = IsHardwareEncoder
  createNativeVideoEncoder()J = CreateNativeVideoEncoder()
org/webrtc/Loggable = Org.Webrtc.ILoggable
  onLogMessage(Ljava/lang/String;Lorg/webrtc/Logging$Severity;Ljava/lang/String;)V = OnLogMessage(string, Org.Webrtc.Logging.Severity, string)
org/webrtc/Logging = Org.Webrtc.Logging
  <init>()V = .ctor()
  d(Ljava/lang/String;Ljava/lang/String;)V = D(string, string)
  e(Ljava/lang/String;Ljava/lang/String;)V = E(string, string)
  e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = E(string, string, Java.Lang.Throwable)
  enableLogThreads()V = EnableLogThreads()
  enableLogTimeStamps()V = EnableLogTimeStamps()
  enableLogToDebugOutput(Lorg/webrtc/Logging$Severity;)V = EnableLogToDebugOutput(Org.Webrtc.Logging.Severity)
  enableTracing(Ljava/lang/String;Ljava/util/EnumSet;)V = EnableTracing(string, Java.Util.EnumSet)
  log(Lorg/webrtc/Logging$Severity;Ljava/lang/String;Ljava/lang/String;)V = Log(Org.Webrtc.Logging.Severity, string, string)
  v(Ljava/lang/String;Ljava/lang/String;)V = V(string, string)
  w(Ljava/lang/String;Ljava/lang/String;)V = W(string, string)
  w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = W(string, string, Java.Lang.Throwable)
org/webrtc/MediaConstraints = Org.Webrtc.MediaConstraints
  <init>()V = .ctor()
  mandatory = Mandatory
  optional = Optional
org/webrtc/MediaSource = Org.Webrtc.MediaSource
  <init>(J)V = .ctor(long)
  getNativeMediaSource()J = NativeMediaSource
  dispose()V = Dispose()
  state()Lorg/webrtc/MediaSource$State; = InvokeState()
org/webrtc/MediaStream = Org.Webrtc.MediaStream
  <init>(J)V = .ctor(long)
  audioTracks = AudioTracks
  preservedVideoTracks = PreservedVideoTracks
  videoTracks = VideoTracks
  getId()Ljava/lang/String; = Id
  addPreservedTrack(Lorg/webrtc/VideoTrack;)Z = AddPreservedTrack(Org.Webrtc.VideoTrack)
  addTrack(Lorg/webrtc/AudioTrack;)Z = AddTrack(Org.Webrtc.AudioTrack)
  addTrack(Lorg/webrtc/VideoTrack;)Z = AddTrack(Org.Webrtc.VideoTrack)
  dispose()V = Dispose()
  removeTrack(Lorg/webrtc/AudioTrack;)Z = RemoveTrack(Org.Webrtc.AudioTrack)
  removeTrack(Lorg/webrtc/VideoTrack;)Z = RemoveTrack(Org.Webrtc.VideoTrack)
org/webrtc/MediaStreamTrack = Org.Webrtc.MediaStreamTrack
  <init>(J)V = .ctor(long)
  AUDIO_TRACK_KIND = AudioTrackKind
  VIDEO_TRACK_KIND = VideoTrackKind
  dispose()V = Dispose()
  enabled()Z = Enabled()
  id()Ljava/lang/String; = Id()
  state()Lorg/webrtc/MediaStreamTrack$State; = InvokeState()
  kind()Ljava/lang/String; = Kind()
  setEnabled(Z)Z = SetEnabled(bool)
org/webrtc/MediaTransportFactoryFactory = Org.Webrtc.IMediaTransportFactoryFactory
  createNativeMediaTransportFactory()J = CreateNativeMediaTransportFactory()
org/webrtc/Metrics = Org.Webrtc.Metrics
  map = Map
  getAndReset()Lorg/webrtc/Metrics; = AndReset
  enable()V = Enable()
org/webrtc/NativeLibraryLoader = Org.Webrtc.INativeLibraryLoader
  load(Ljava/lang/String;)Z = Load(string)
org/webrtc/NativePeerConnectionFactory = Org.Webrtc.INativePeerConnectionFactory
  createNativePeerConnection()J = CreateNativePeerConnection()
org/webrtc/NetEqFactoryFactory = Org.Webrtc.INetEqFactoryFactory
  createNativeNetEqFactory()J = CreateNativeNetEqFactory()
org/webrtc/NetworkControllerFactoryFactory = Org.Webrtc.INetworkControllerFactoryFactory
  createNativeNetworkControllerFactory()J = CreateNativeNetworkControllerFactory()
org/webrtc/NetworkMonitor = Org.Webrtc.NetworkMonitor
  getInstance()Lorg/webrtc/NetworkMonitor; = Instance
  isOnline()Z = IsOnline
  addNetworkObserver(Lorg/webrtc/NetworkMonitor$NetworkObserver;)V = AddNetworkObserver(Org.Webrtc.NetworkMonitor.INetworkObserver)
  addObserver(Lorg/webrtc/NetworkMonitor$NetworkObserver;)V = AddObserver(Org.Webrtc.NetworkMonitor.INetworkObserver)
  init(Landroid/content/Context;)V = Init(Android.Content.Context)
  removeNetworkObserver(Lorg/webrtc/NetworkMonitor$NetworkObserver;)V = RemoveNetworkObserver(Org.Webrtc.NetworkMonitor.INetworkObserver)
  removeObserver(Lorg/webrtc/NetworkMonitor$NetworkObserver;)V = RemoveObserver(Org.Webrtc.NetworkMonitor.INetworkObserver)
  startMonitoring()V = StartMonitoring()
  startMonitoring(Landroid/content/Context;)V = StartMonitoring(Android.Content.Context)
  stopMonitoring()V = StopMonitoring()
org/webrtc/NetworkMonitorAutoDetect = Org.Webrtc.NetworkMonitorAutoDetect
  <init>(Lorg/webrtc/NetworkMonitorAutoDetect$Observer;Landroid/content/Context;)V = .ctor(Org.Webrtc.NetworkMonitorAutoDetect.IObserver, Android.Content.Context)
  getCurrentNetworkState()Ljava/lang/Object; = CurrentNetworkState
  getDefaultNetId()J = DefaultNetId
  destroy()V = Destroy()
  onReceive(Landroid/content/Context;Landroid/content/Intent;)V = OnReceive(Android.Content.Context, Android.Content.Intent)
  supportNetworkCallback()Z = SupportNetworkCallback()
org/webrtc/NetworkStatePredictorFactoryFactory = Org.Webrtc.INetworkStatePredictorFactoryFactory
  createNativeNetworkStatePredictorFactory()J = CreateNativeNetworkStatePredictorFactory()
org/webrtc/NV12Buffer = Org.Webrtc.NV12Buffer
  <init>(IIIILjava/nio/ByteBuffer;Ljava/lang/Runnable;)V = .ctor(int, int, int, int, Java.Nio.ByteBuffer, Java.Lang.IRunnable)
  getHeight()I = Height
  getWidth()I = Width
  cropAndScale(IIIIII)Lorg/webrtc/VideoFrame$Buffer; = CropAndScale(int, int, int, int, int, int)
  release()V = Release()
  retain()V = Retain()
  toI420()Lorg/webrtc/VideoFrame$I420Buffer; = ToI420()
org/webrtc/NV21Buffer = Org.Webrtc.NV21Buffer
  <init>([BIILjava/lang/Runnable;)V = .ctor(byte[], int, int, Java.Lang.IRunnable)
  getHeight()I = Height
  getWidth()I = Width
  cropAndScale(IIIIII)Lorg/webrtc/VideoFrame$Buffer; = CropAndScale(int, int, int, int, int, int)
  release()V = Release()
  retain()V = Retain()
  toI420()Lorg/webrtc/VideoFrame$I420Buffer; = ToI420()
org/webrtc/PeerConnection = Org.Webrtc.PeerConnection
  <init>(Lorg/webrtc/NativePeerConnectionFactory;)V = .ctor(Org.Webrtc.INativePeerConnectionFactory)
  getCertificate()Lorg/webrtc/RtcCertificatePem; = Certificate
  getLocalDescription()Lorg/webrtc/SessionDescription; = LocalDescription
  getNativePeerConnection()J = NativePeerConnection
  getReceivers()Ljava/util/List; = Receivers
  getRemoteDescription()Lorg/webrtc/SessionDescription; = RemoteDescription
  getSenders()Ljava/util/List; = Senders
  getTransceivers()Ljava/util/List; = Transceivers
  addIceCandidate(Lorg/webrtc/IceCandidate;)Z = AddIceCandidate(Org.Webrtc.IceCandidate)
  addStream(Lorg/webrtc/MediaStream;)Z = AddStream(Org.Webrtc.MediaStream)
  addTrack(Lorg/webrtc/MediaStreamTrack;)Lorg/webrtc/RtpSender; = AddTrack(Org.Webrtc.MediaStreamTrack)
  addTrack(Lorg/webrtc/MediaStreamTrack;Ljava/util/List;)Lorg/webrtc/RtpSender; = AddTrack(Org.Webrtc.MediaStreamTrack, System.Collections.Generic.IList<string>)
  addTransceiver(Lorg/webrtc/MediaStreamTrack;)Lorg/webrtc/RtpTransceiver; = AddTransceiver(Org.Webrtc.MediaStreamTrack)
  addTransceiver(Lorg/webrtc/MediaStreamTrack;Lorg/webrtc/RtpTransceiver$RtpTransceiverInit;)Lorg/webrtc/RtpTransceiver; = AddTransceiver(Org.Webrtc.MediaStreamTrack, Org.Webrtc.RtpTransceiver.RtpTransceiverInit)
  addTransceiver(Lorg/webrtc/MediaStreamTrack$MediaType;)Lorg/webrtc/RtpTransceiver; = AddTransceiver(Org.Webrtc.MediaStreamTrack.MediaType)
  addTransceiver(Lorg/webrtc/MediaStreamTrack$MediaType;Lorg/webrtc/RtpTransceiver$RtpTransceiverInit;)Lorg/webrtc/RtpTransceiver; = AddTransceiver(Org.Webrtc.MediaStreamTrack.MediaType, Org.Webrtc.RtpTransceiver.RtpTransceiverInit)
  close()V = Close()
  connectionState()Lorg/webrtc/PeerConnection$PeerConnectionState; = ConnectionState()
  createAnswer(Lorg/webrtc/SdpObserver;Lorg/webrtc/MediaConstraints;)V = CreateAnswer(Org.Webrtc.ISdpObserver, Org.Webrtc.MediaConstraints)
  createDataChannel(Ljava/lang/String;Lorg/webrtc/DataChannel$Init;)Lorg/webrtc/DataChannel; = CreateDataChannel(string, Org.Webrtc.DataChannel.Init)
  createNativePeerConnectionObserver(Lorg/webrtc/PeerConnection$Observer;)J = CreateNativePeerConnectionObserver(Org.Webrtc.PeerConnection.IObserver)
  createOffer(Lorg/webrtc/SdpObserver;Lorg/webrtc/MediaConstraints;)V = CreateOffer(Org.Webrtc.ISdpObserver, Org.Webrtc.MediaConstraints)
  createSender(Ljava/lang/String;Ljava/lang/String;)Lorg/webrtc/RtpSender; = CreateSender(string, string)
  dispose()V = Dispose()
  getStats(Lorg/webrtc/RTCStatsCollectorCallback;)V = GetStats(Org.Webrtc.IRTCStatsCollectorCallback)
  getStats(Lorg/webrtc/StatsObserver;Lorg/webrtc/MediaStreamTrack;)Z = GetStats(Org.Webrtc.IStatsObserver, Org.Webrtc.MediaStreamTrack)
  iceConnectionState()Lorg/webrtc/PeerConnection$IceConnectionState; = InvokeIceConnectionState()
  iceGatheringState()Lorg/webrtc/PeerConnection$IceGatheringState; = InvokeIceGatheringState()
  signalingState()Lorg/webrtc/PeerConnection$SignalingState; = InvokeSignalingState()
  removeIceCandidates([Lorg/webrtc/IceCandidate;)Z = RemoveIceCandidates(Org.Webrtc.IceCandidate[])
  removeStream(Lorg/webrtc/MediaStream;)V = RemoveStream(Org.Webrtc.MediaStream)
  removeTrack(Lorg/webrtc/RtpSender;)Z = RemoveTrack(Org.Webrtc.RtpSender)
  setAudioPlayout(Z)V = SetAudioPlayout(bool)
  setAudioRecording(Z)V = SetAudioRecording(bool)
  setBitrate(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Z = SetBitrate(Java.Lang.Integer, Java.Lang.Integer, Java.Lang.Integer)
  setConfiguration(Lorg/webrtc/PeerConnection$RTCConfiguration;)Z = SetConfiguration(Org.Webrtc.PeerConnection.RTCConfiguration)
  setLocalDescription(Lorg/webrtc/SdpObserver;Lorg/webrtc/SessionDescription;)V = SetLocalDescription(Org.Webrtc.ISdpObserver, Org.Webrtc.SessionDescription)
  setRemoteDescription(Lorg/webrtc/SdpObserver;Lorg/webrtc/SessionDescription;)V = SetRemoteDescription(Org.Webrtc.ISdpObserver, Org.Webrtc.SessionDescription)
  startRtcEventLog(II)Z = StartRtcEventLog(int, int)
  stopRtcEventLog()V = StopRtcEventLog()
org/webrtc/PeerConnectionDependencies = Org.Webrtc.PeerConnectionDependencies
  builder(Lorg/webrtc/PeerConnection$Observer;)Lorg/webrtc/PeerConnectionDependencies$Builder; = InvokeBuilder(Org.Webrtc.PeerConnection.IObserver)
org/webrtc/PeerConnectionFactory = Org.Webrtc.PeerConnectionFactory
  TRIAL_ENABLED = TrialEnabled
  VIDEO_FRAME_EMIT_TRIAL = VideoFrameEmitTrial
  getNativeOwnedFactoryAndThreads()J = NativeOwnedFactoryAndThreads
  getNativePeerConnectionFactory()J = NativePeerConnectionFactory
  createAudioSource(Lorg/webrtc/MediaConstraints;)Lorg/webrtc/AudioSource; = CreateAudioSource(Org.Webrtc.MediaConstraints)
  createAudioTrack(Ljava/lang/String;Lorg/webrtc/AudioSource;)Lorg/webrtc/AudioTrack; = CreateAudioTrack(string, Org.Webrtc.AudioSource)
  createLocalMediaStream(Ljava/lang/String;)Lorg/webrtc/MediaStream; = CreateLocalMediaStream(string)
  createPeerConnection(Ljava/util/List;Lorg/webrtc/MediaConstraints;Lorg/webrtc/PeerConnection$Observer;)Lorg/webrtc/PeerConnection; = CreatePeerConnection(System.Collections.Generic.IList<Org.Webrtc.PeerConnection.IceServer>, Org.Webrtc.MediaConstraints, Org.Webrtc.PeerConnection.IObserver)
  createPeerConnection(Ljava/util/List;Lorg/webrtc/PeerConnection$Observer;)Lorg/webrtc/PeerConnection; = CreatePeerConnection(System.Collections.Generic.IList<Org.Webrtc.PeerConnection.IceServer>, Org.Webrtc.PeerConnection.IObserver)
  createPeerConnection(Lorg/webrtc/PeerConnection$RTCConfiguration;Lorg/webrtc/MediaConstraints;Lorg/webrtc/PeerConnection$Observer;)Lorg/webrtc/PeerConnection; = CreatePeerConnection(Org.Webrtc.PeerConnection.RTCConfiguration, Org.Webrtc.MediaConstraints, Org.Webrtc.PeerConnection.IObserver)
  createPeerConnection(Lorg/webrtc/PeerConnection$RTCConfiguration;Lorg/webrtc/PeerConnection$Observer;)Lorg/webrtc/PeerConnection; = CreatePeerConnection(Org.Webrtc.PeerConnection.RTCConfiguration, Org.Webrtc.PeerConnection.IObserver)
  createPeerConnection(Lorg/webrtc/PeerConnection$RTCConfiguration;Lorg/webrtc/PeerConnectionDependencies;)Lorg/webrtc/PeerConnection; = CreatePeerConnection(Org.Webrtc.PeerConnection.RTCConfiguration, Org.Webrtc.PeerConnectionDependencies)
  createVideoSource(Z)Lorg/webrtc/VideoSource; = CreateVideoSource(bool)
  createVideoSource(ZZ)Lorg/webrtc/VideoSource; = CreateVideoSource(bool, bool)
  createVideoTrack(Ljava/lang/String;Lorg/webrtc/VideoSource;)Lorg/webrtc/VideoTrack; = CreateVideoTrack(string, Org.Webrtc.VideoSource)
  dispose()V = Dispose()
  fieldTrialsFindFullName(Ljava/lang/String;)Ljava/lang/String; = FieldTrialsFindFullName(string)
  initialize(Lorg/webrtc/PeerConnectionFactory$InitializationOptions;)V = Initialize(Org.Webrtc.PeerConnectionFactory.InitializationOptions)
  initializeFieldTrials(Ljava/lang/String;)V = InitializeFieldTrials(string)
  builder()Lorg/webrtc/PeerConnectionFactory$Builder; = InvokeBuilder()
  printInternalStackTraces(Z)V = PrintInternalStackTraces(bool)
  printStackTraces()V = PrintStackTraces()
  shutdownInternalTracer()V = ShutdownInternalTracer()
  startAecDump(II)Z = StartAecDump(int, int)
  startInternalTracingCapture(Ljava/lang/String;)Z = StartInternalTracingCapture(string)
  stopAecDump()V = StopAecDump()
  stopInternalTracingCapture()V = StopInternalTracingCapture()
org/webrtc/PlatformSoftwareVideoDecoderFactory = Org.Webrtc.PlatformSoftwareVideoDecoderFactory
  <init>(Lorg/webrtc/EglBase$Context;)V = .ctor(Org.Webrtc.IEglBaseContext)
  createDecoder(Lorg/webrtc/VideoCodecInfo;)Lorg/webrtc/VideoDecoder; = CreateDecoder(Org.Webrtc.VideoCodecInfo)
  getSupportedCodecs()[Lorg/webrtc/VideoCodecInfo; = GetSupportedCodecs()
org/webrtc/Predicate = Org.Webrtc.IPredicate
  test(Ljava/lang/Object;)Z = Test(Java.Lang.Object)
org/webrtc/Priority = Org.Webrtc.IPriority
  HIGH = High
  LOW = Low
  MEDIUM = Medium
  VERY_LOW = VeryLow
org/webrtc/RefCounted = Org.Webrtc.IRefCounted
  release()V = Release()
  retain()V = Retain()
org/webrtc/RendererCommon = Org.Webrtc.RendererCommon
  <init>()V = .ctor()
  convertMatrixFromAndroidGraphicsMatrix(Landroid/graphics/Matrix;)[F = ConvertMatrixFromAndroidGraphicsMatrix(Android.Graphics.Matrix)
  convertMatrixToAndroidGraphicsMatrix([F)Landroid/graphics/Matrix; = ConvertMatrixToAndroidGraphicsMatrix(float[])
  getDisplaySize(FFII)Landroid/graphics/Point; = GetDisplaySize(float, float, int, int)
  getDisplaySize(Lorg/webrtc/RendererCommon$ScalingType;FII)Landroid/graphics/Point; = GetDisplaySize(Org.Webrtc.RendererCommon.ScalingType, float, int, int)
  getLayoutMatrix(ZFF)[F = GetLayoutMatrix(bool, float, float)
org/webrtc/RtcCertificatePem = Org.Webrtc.RtcCertificatePem
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  certificate = Certificate
  privateKey = PrivateKey
  generateCertificate()Lorg/webrtc/RtcCertificatePem; = GenerateCertificate()
  generateCertificate(J)Lorg/webrtc/RtcCertificatePem; = GenerateCertificate(long)
  generateCertificate(Lorg/webrtc/PeerConnection$KeyType;)Lorg/webrtc/RtcCertificatePem; = GenerateCertificate(Org.Webrtc.PeerConnection.KeyType)
  generateCertificate(Lorg/webrtc/PeerConnection$KeyType;J)Lorg/webrtc/RtcCertificatePem; = GenerateCertificate(Org.Webrtc.PeerConnection.KeyType, long)
org/webrtc/RTCStats = Org.Webrtc.RTCStats
  <init>(JLjava/lang/String;Ljava/lang/String;Ljava/util/Map;)V = .ctor(long, string, string, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  getId()Ljava/lang/String; = Id
  getMembers()Ljava/util/Map; = Members
  getTimestampUs()D = TimestampUs
  getType()Ljava/lang/String; = Type
org/webrtc/RTCStatsCollectorCallback = Org.Webrtc.IRTCStatsCollectorCallback
  onStatsDelivered(Lorg/webrtc/RTCStatsReport;)V = OnStatsDelivered(Org.Webrtc.RTCStatsReport)
org/webrtc/RTCStatsReport = Org.Webrtc.RTCStatsReport
  <init>(JLjava/util/Map;)V = .ctor(long, System.Collections.Generic.IDictionary<string, Org.Webrtc.RTCStats>)
  getStatsMap()Ljava/util/Map; = StatsMap
  getTimestampUs()D = TimestampUs
org/webrtc/RtpParameters = Org.Webrtc.RtpParameters
  codecs = Codecs
  degradationPreference = DegradationPreference
  encodings = Encodings
  transactionId = TransactionId
  getHeaderExtensions()Ljava/util/List; = HeaderExtensions
  getRtcp()Lorg/webrtc/RtpParameters$Rtcp; = GetRtcp()
org/webrtc/RtpReceiver = Org.Webrtc.RtpReceiver
  <init>(J)V = .ctor(long)
  getParameters()Lorg/webrtc/RtpParameters; = Parameters
  dispose()V = Dispose()
  id()Ljava/lang/String; = Id()
  setFrameDecryptor(Lorg/webrtc/FrameDecryptor;)V = SetFrameDecryptor(Org.Webrtc.IFrameDecryptor)
  SetObserver(Lorg/webrtc/RtpReceiver$Observer;)V = SetObserver(Org.Webrtc.RtpReceiver.IObserver)
  track()Lorg/webrtc/MediaStreamTrack; = Track()
org/webrtc/RtpSender = Org.Webrtc.RtpSender
  <init>(J)V = .ctor(long)
  getParameters()Lorg/webrtc/RtpParameters; = Parameters
  getStreams()Ljava/util/List; = Streams
  setStreams(Ljava/util/List;)V = Streams
  dispose()V = Dispose()
  dtmf()Lorg/webrtc/DtmfSender; = Dtmf()
  id()Ljava/lang/String; = Id()
  setFrameEncryptor(Lorg/webrtc/FrameEncryptor;)V = SetFrameEncryptor(Org.Webrtc.IFrameEncryptor)
  setParameters(Lorg/webrtc/RtpParameters;)Z = SetParameters(Org.Webrtc.RtpParameters)
  setTrack(Lorg/webrtc/MediaStreamTrack;Z)Z = SetTrack(Org.Webrtc.MediaStreamTrack, bool)
  track()Lorg/webrtc/MediaStreamTrack; = Track()
org/webrtc/RtpTransceiver = Org.Webrtc.RtpTransceiver
  <init>(J)V = .ctor(long)
  getCurrentDirection()Lorg/webrtc/RtpTransceiver$RtpTransceiverDirection; = CurrentDirection
  getDirection()Lorg/webrtc/RtpTransceiver$RtpTransceiverDirection; = Direction
  setDirection(Lorg/webrtc/RtpTransceiver$RtpTransceiverDirection;)V = Direction
  isStopped()Z = IsStopped
  getMediaType()Lorg/webrtc/MediaStreamTrack$MediaType; = MediaType
  getMid()Ljava/lang/String; = Mid
  getReceiver()Lorg/webrtc/RtpReceiver; = Receiver
  getSender()Lorg/webrtc/RtpSender; = Sender
  dispose()V = Dispose()
  stop()V = Stop()
org/webrtc/ScreenCapturerAndroid = Org.Webrtc.ScreenCapturerAndroid
  <init>(Landroid/content/Intent;Landroid/media/projection/MediaProjection$Callback;)V = .ctor(Android.Content.Intent, Android.Media.Projection.MediaProjection.Callback)
  isScreencast()Z = IsScreencast
  getNumCapturedFrames()J = NumCapturedFrames
  changeCaptureFormat(III)V = ChangeCaptureFormat(int, int, int)
  dispose()V = Dispose()
  initialize(Lorg/webrtc/SurfaceTextureHelper;Landroid/content/Context;Lorg/webrtc/CapturerObserver;)V = Initialize(Org.Webrtc.SurfaceTextureHelper, Android.Content.Context, Org.Webrtc.ICapturerObserver)
  onFrame(Lorg/webrtc/VideoFrame;)V = OnFrame(Org.Webrtc.VideoFrame)
  startCapture(III)V = StartCapture(int, int, int)
  stopCapture()V = StopCapture()
org/webrtc/SdpObserver = Org.Webrtc.ISdpObserver
  onCreateFailure(Ljava/lang/String;)V = OnCreateFailure(string)
  onCreateSuccess(Lorg/webrtc/SessionDescription;)V = OnCreateSuccess(Org.Webrtc.SessionDescription)
  onSetFailure(Ljava/lang/String;)V = OnSetFailure(string)
  onSetSuccess()V = OnSetSuccess()
org/webrtc/SessionDescription = Org.Webrtc.SessionDescription
  <init>(Lorg/webrtc/SessionDescription$Type;Ljava/lang/String;)V = .ctor(Org.Webrtc.SessionDescription.Type, string)
  description = Description
  type = Type
org/webrtc/Size = Org.Webrtc.Size
  <init>(II)V = .ctor(int, int)
  height = Height
  width = Width
org/webrtc/SoftwareVideoDecoderFactory = Org.Webrtc.SoftwareVideoDecoderFactory
  <init>()V = .ctor()
  createDecoder(Ljava/lang/String;)Lorg/webrtc/VideoDecoder; = CreateDecoder(string)
  createDecoder(Lorg/webrtc/VideoCodecInfo;)Lorg/webrtc/VideoDecoder; = CreateDecoder(Org.Webrtc.VideoCodecInfo)
  getSupportedCodecs()[Lorg/webrtc/VideoCodecInfo; = GetSupportedCodecs()
org/webrtc/SoftwareVideoEncoderFactory = Org.Webrtc.SoftwareVideoEncoderFactory
  <init>()V = .ctor()
  createEncoder(Lorg/webrtc/VideoCodecInfo;)Lorg/webrtc/VideoEncoder; = CreateEncoder(Org.Webrtc.VideoCodecInfo)
  getSupportedCodecs()[Lorg/webrtc/VideoCodecInfo; = GetSupportedCodecs()
org/webrtc/SSLCertificateVerifier = Org.Webrtc.ISSLCertificateVerifier
  verify([B)Z = Verify(byte[])
org/webrtc/StatsObserver = Org.Webrtc.IStatsObserver
  onComplete([Lorg/webrtc/StatsReport;)V = OnComplete(Org.Webrtc.StatsReport[])
org/webrtc/StatsReport = Org.Webrtc.StatsReport
  <init>(Ljava/lang/String;Ljava/lang/String;D[Lorg/webrtc/StatsReport$Value;)V = .ctor(string, string, double, Org.Webrtc.StatsReport.Value[])
  id = Id
  timestamp = Timestamp
  type = Type
  values = Values
org/webrtc/SurfaceEglRenderer = Org.Webrtc.SurfaceEglRenderer
  <init>(Ljava/lang/String;)V = .ctor(string)
  init(Lorg/webrtc/EglBase$Context;Lorg/webrtc/RendererCommon$RendererEvents;[ILorg/webrtc/RendererCommon$GlDrawer;)V = Init(Org.Webrtc.IEglBaseContext, Org.Webrtc.RendererCommon.IRendererEvents, int[], Org.Webrtc.RendererCommon.IGlDrawer)
  surfaceChanged(Landroid/view/SurfaceHolder;III)V = SurfaceChanged(Android.Views.ISurfaceHolder, Android.Graphics.Format, int, int)
  surfaceCreated(Landroid/view/SurfaceHolder;)V = SurfaceCreated(Android.Views.ISurfaceHolder)
  surfaceDestroyed(Landroid/view/SurfaceHolder;)V = SurfaceDestroyed(Android.Views.ISurfaceHolder)
org/webrtc/SurfaceTextureHelper = Org.Webrtc.SurfaceTextureHelper
  getHandler()Landroid/os/Handler; = Handler
  isTextureInUse()Z = IsTextureInUse
  getSurfaceTexture()Landroid/graphics/SurfaceTexture; = SurfaceTexture
  create(Ljava/lang/String;Lorg/webrtc/EglBase$Context;)Lorg/webrtc/SurfaceTextureHelper; = Create(string, Org.Webrtc.IEglBaseContext)
  create(Ljava/lang/String;Lorg/webrtc/EglBase$Context;Z)Lorg/webrtc/SurfaceTextureHelper; = Create(string, Org.Webrtc.IEglBaseContext, bool)
  create(Ljava/lang/String;Lorg/webrtc/EglBase$Context;ZLorg/webrtc/YuvConverter;)Lorg/webrtc/SurfaceTextureHelper; = Create(string, Org.Webrtc.IEglBaseContext, bool, Org.Webrtc.YuvConverter)
  create(Ljava/lang/String;Lorg/webrtc/EglBase$Context;ZLorg/webrtc/YuvConverter;Lorg/webrtc/SurfaceTextureHelper$FrameRefMonitor;)Lorg/webrtc/SurfaceTextureHelper; = Create(string, Org.Webrtc.IEglBaseContext, bool, Org.Webrtc.YuvConverter, Org.Webrtc.SurfaceTextureHelper.IFrameRefMonitor)
  dispose()V = Dispose()
  setFrameRotation(I)V = SetFrameRotation(int)
  setTextureSize(II)V = SetTextureSize(int, int)
  startListening(Lorg/webrtc/VideoSink;)V = StartListening(Org.Webrtc.IVideoSink)
  stopListening()V = StopListening()
  textureToYuv(Lorg/webrtc/VideoFrame$TextureBuffer;)Lorg/webrtc/VideoFrame$I420Buffer; = TextureToYuv(Org.Webrtc.VideoFrame.ITextureBuffer)
org/webrtc/SurfaceViewRenderer = Org.Webrtc.SurfaceViewRenderer
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  addFrameListener(Lorg/webrtc/EglRenderer$FrameListener;F)V = AddFrameListener(Org.Webrtc.EglRenderer.IFrameListener, float)
  addFrameListener(Lorg/webrtc/EglRenderer$FrameListener;FLorg/webrtc/RendererCommon$GlDrawer;)V = AddFrameListener(Org.Webrtc.EglRenderer.IFrameListener, float, Org.Webrtc.RendererCommon.IGlDrawer)
  clearImage()V = ClearImage()
  disableFpsReduction()V = DisableFpsReduction()
  init(Lorg/webrtc/EglBase$Context;Lorg/webrtc/RendererCommon$RendererEvents;)V = Init(Org.Webrtc.IEglBaseContext, Org.Webrtc.RendererCommon.IRendererEvents)
  init(Lorg/webrtc/EglBase$Context;Lorg/webrtc/RendererCommon$RendererEvents;[ILorg/webrtc/RendererCommon$GlDrawer;)V = Init(Org.Webrtc.IEglBaseContext, Org.Webrtc.RendererCommon.IRendererEvents, int[], Org.Webrtc.RendererCommon.IGlDrawer)
  onFirstFrameRendered()V = OnFirstFrameRendered()
  onFrame(Lorg/webrtc/VideoFrame;)V = OnFrame(Org.Webrtc.VideoFrame)
  onFrameResolutionChanged(III)V = OnFrameResolutionChanged(int, int, int)
  pauseVideo()V = PauseVideo()
  release()V = Release()
  removeFrameListener(Lorg/webrtc/EglRenderer$FrameListener;)V = RemoveFrameListener(Org.Webrtc.EglRenderer.IFrameListener)
  setEnableHardwareScaler(Z)V = SetEnableHardwareScaler(bool)
  setFpsReduction(F)V = SetFpsReduction(float)
  setMirror(Z)V = SetMirror(bool)
  setScalingType(Lorg/webrtc/RendererCommon$ScalingType;)V = SetScalingType(Org.Webrtc.RendererCommon.ScalingType)
  setScalingType(Lorg/webrtc/RendererCommon$ScalingType;Lorg/webrtc/RendererCommon$ScalingType;)V = SetScalingType(Org.Webrtc.RendererCommon.ScalingType, Org.Webrtc.RendererCommon.ScalingType)
  surfaceChanged(Landroid/view/SurfaceHolder;III)V = SurfaceChanged(Android.Views.ISurfaceHolder, Android.Graphics.Format, int, int)
  surfaceCreated(Landroid/view/SurfaceHolder;)V = SurfaceCreated(Android.Views.ISurfaceHolder)
  surfaceDestroyed(Landroid/view/SurfaceHolder;)V = SurfaceDestroyed(Android.Views.ISurfaceHolder)
org/webrtc/TextureBufferImpl = Org.Webrtc.TextureBufferImpl
  <init>(IILorg/webrtc/VideoFrame$TextureBuffer$Type;ILandroid/graphics/Matrix;Landroid/os/Handler;Lorg/webrtc/YuvConverter;Ljava/lang/Runnable;)V = .ctor(int, int, Org.Webrtc.VideoFrame.TextureBufferType, int, Android.Graphics.Matrix, Android.OS.Handler, Org.Webrtc.YuvConverter, Java.Lang.IRunnable)
  getHeight()I = Height
  getTextureId()I = TextureId
  getToI420Handler()Landroid/os/Handler; = ToI420Handler
  getTransformMatrix()Landroid/graphics/Matrix; = TransformMatrix
  getType()Lorg/webrtc/VideoFrame$TextureBuffer$Type; = Type
  getUnscaledHeight()I = UnscaledHeight
  getUnscaledWidth()I = UnscaledWidth
  getWidth()I = Width
  getYuvConverter()Lorg/webrtc/YuvConverter; = YuvConverter
  applyTransformMatrix(Landroid/graphics/Matrix;II)Lorg/webrtc/TextureBufferImpl; = ApplyTransformMatrix(Android.Graphics.Matrix, int, int)
  cropAndScale(IIIIII)Lorg/webrtc/VideoFrame$Buffer; = CropAndScale(int, int, int, int, int, int)
  release()V = Release()
  retain()V = Retain()
  toI420()Lorg/webrtc/VideoFrame$I420Buffer; = ToI420()
org/webrtc/ThreadUtils = Org.Webrtc.ThreadUtils
  <init>()V = .ctor()
  awaitUninterruptibly(Ljava/util/concurrent/CountDownLatch;)V = AwaitUninterruptibly(Java.Util.Concurrent.CountDownLatch)
  awaitUninterruptibly(Ljava/util/concurrent/CountDownLatch;J)Z = AwaitUninterruptibly(Java.Util.Concurrent.CountDownLatch, long)
  checkIsOnMainThread()V = CheckIsOnMainThread()
  executeUninterruptibly(Lorg/webrtc/ThreadUtils$BlockingOperation;)V = ExecuteUninterruptibly(Org.Webrtc.ThreadUtils.IBlockingOperation)
  invokeAtFrontUninterruptibly(Landroid/os/Handler;Ljava/lang/Runnable;)V = InvokeAtFrontUninterruptibly(Android.OS.Handler, Java.Lang.IRunnable)
  invokeAtFrontUninterruptibly(Landroid/os/Handler;Ljava/util/concurrent/Callable;)Ljava/lang/Object; = InvokeAtFrontUninterruptibly(Android.OS.Handler, Java.Util.Concurrent.ICallable)
  joinUninterruptibly(Ljava/lang/Thread;)V = JoinUninterruptibly(Java.Lang.Thread)
  joinUninterruptibly(Ljava/lang/Thread;J)Z = JoinUninterruptibly(Java.Lang.Thread, long)
org/webrtc/TimestampAligner = Org.Webrtc.TimestampAligner
  <init>()V = .ctor()
  getRtcTimeNanos()J = RtcTimeNanos
  dispose()V = Dispose()
  translateTimestamp(J)J = TranslateTimestamp(long)
org/webrtc/TurnCustomizer = Org.Webrtc.TurnCustomizer
  <init>(J)V = .ctor(long)
  dispose()V = Dispose()
org/webrtc/VideoCapturer = Org.Webrtc.IVideoCapturer
  isScreencast()Z = IsScreencast
  changeCaptureFormat(III)V = ChangeCaptureFormat(int, int, int)
  dispose()V = Dispose()
  initialize(Lorg/webrtc/SurfaceTextureHelper;Landroid/content/Context;Lorg/webrtc/CapturerObserver;)V = Initialize(Org.Webrtc.SurfaceTextureHelper, Android.Content.Context, Org.Webrtc.ICapturerObserver)
  startCapture(III)V = StartCapture(int, int, int)
  stopCapture()V = StopCapture()
org/webrtc/VideoCodecInfo = Org.Webrtc.VideoCodecInfo
  <init>(ILjava/lang/String;Ljava/util/Map;)V = .ctor(int, string, System.Collections.Generic.IDictionary<string, string>)
  <init>(Ljava/lang/String;Ljava/util/Map;)V = .ctor(string, System.Collections.Generic.IDictionary<string, string>)
  H264_CONSTRAINED_BASELINE_3_1 = H264ConstrainedBaseline31
  H264_CONSTRAINED_HIGH_3_1 = H264ConstrainedHigh31
  H264_FMTP_LEVEL_ASYMMETRY_ALLOWED = H264FmtpLevelAsymmetryAllowed
  H264_FMTP_PACKETIZATION_MODE = H264FmtpPacketizationMode
  H264_FMTP_PROFILE_LEVEL_ID = H264FmtpProfileLevelId
  H264_LEVEL_3_1 = H264Level31
  H264_PROFILE_CONSTRAINED_BASELINE = H264ProfileConstrainedBaseline
  H264_PROFILE_CONSTRAINED_HIGH = H264ProfileConstrainedHigh
  name = Name
  params = Params
  payload = Payload
org/webrtc/VideoCodecStatus = Org.Webrtc.VideoCodecStatus
  ERROR = Error
  ERR_PARAMETER = ErrParameter
  ERR_REQUEST_SLI = ErrRequestSli
  ERR_SIZE = ErrSize
  FALLBACK_SOFTWARE = FallbackSoftware
  LEVEL_EXCEEDED = LevelExceeded
  MEMORY = Memory
  NO_OUTPUT = NoOutput
  OK = Ok
  REQUEST_SLI = RequestSli
  TARGET_BITRATE_OVERSHOOT = TargetBitrateOvershoot
  TIMEOUT = Timeout
  UNINITIALIZED = Uninitialized
  getNumber()I = Number
  valueOf(Ljava/lang/String;)Lorg/webrtc/VideoCodecStatus; = ValueOf(string)
  values()[Lorg/webrtc/VideoCodecStatus; = Values()
org/webrtc/VideoCodecType = Org.Webrtc.IVideoCodecType
  VIDEO_CODEC_AV1 = VideoCodecAv1
  VIDEO_CODEC_GENERIC = VideoCodecGeneric
  VIDEO_CODEC_H264 = VideoCodecH264
  VIDEO_CODEC_MULTIPLEX = VideoCodecMultiplex
  VIDEO_CODEC_VP8 = VideoCodecVp8
  VIDEO_CODEC_VP9 = VideoCodecVp9
org/webrtc/VideoDecoder = Org.Webrtc.IVideoDecoder
  getImplementationName()Ljava/lang/String; = ImplementationName
  getPrefersLateDecoding()Z = PrefersLateDecoding
  decode(Lorg/webrtc/EncodedImage;Lorg/webrtc/VideoDecoder$DecodeInfo;)Lorg/webrtc/VideoCodecStatus; = Decode(Org.Webrtc.EncodedImage, Org.Webrtc.VideoDecoderDecodeInfo)
  initDecode(Lorg/webrtc/VideoDecoder$Settings;Lorg/webrtc/VideoDecoder$Callback;)Lorg/webrtc/VideoCodecStatus; = InitDecode(Org.Webrtc.VideoDecoderSettings, Org.Webrtc.IVideoDecoderCallback)
  release()Lorg/webrtc/VideoCodecStatus; = Release()
org/webrtc/VideoDecoderFactory = Org.Webrtc.IVideoDecoderFactory
org/webrtc/VideoDecoderFallback = Org.Webrtc.VideoDecoderFallback
  <init>(Lorg/webrtc/VideoDecoder;Lorg/webrtc/VideoDecoder;)V = .ctor(Org.Webrtc.IVideoDecoder, Org.Webrtc.IVideoDecoder)
  createNativeVideoDecoder()J = CreateNativeVideoDecoder()
org/webrtc/VideoEncoder = Org.Webrtc.IVideoEncoder
  getImplementationName()Ljava/lang/String; = ImplementationName
  getScalingSettings()Lorg/webrtc/VideoEncoder$ScalingSettings; = ScalingSettings
  encode(Lorg/webrtc/VideoFrame;Lorg/webrtc/VideoEncoder$EncodeInfo;)Lorg/webrtc/VideoCodecStatus; = Encode(Org.Webrtc.VideoFrame, Org.Webrtc.VideoEncoderEncodeInfo)
  initEncode(Lorg/webrtc/VideoEncoder$Settings;Lorg/webrtc/VideoEncoder$Callback;)Lorg/webrtc/VideoCodecStatus; = InitEncode(Org.Webrtc.VideoEncoderSettings, Org.Webrtc.IVideoEncoderCallback)
  release()Lorg/webrtc/VideoCodecStatus; = Release()
  setRateAllocation(Lorg/webrtc/VideoEncoder$BitrateAllocation;I)Lorg/webrtc/VideoCodecStatus; = SetRateAllocation(Org.Webrtc.VideoEncoderBitrateAllocation, int)
org/webrtc/VideoEncoderFactory = Org.Webrtc.IVideoEncoderFactory
  createEncoder(Lorg/webrtc/VideoCodecInfo;)Lorg/webrtc/VideoEncoder; = CreateEncoder(Org.Webrtc.VideoCodecInfo)
  getSupportedCodecs()[Lorg/webrtc/VideoCodecInfo; = GetSupportedCodecs()
org/webrtc/VideoEncoderFallback = Org.Webrtc.VideoEncoderFallback
  <init>(Lorg/webrtc/VideoEncoder;Lorg/webrtc/VideoEncoder;)V = .ctor(Org.Webrtc.IVideoEncoder, Org.Webrtc.IVideoEncoder)
  isHardwareEncoder()Z = IsHardwareEncoder
  createNativeVideoEncoder()J = CreateNativeVideoEncoder()
org/webrtc/VideoFileRenderer = Org.Webrtc.VideoFileRenderer
  <init>(Ljava/lang/String;IILorg/webrtc/EglBase$Context;)V = .ctor(string, int, int, Org.Webrtc.IEglBaseContext)
  onFrame(Lorg/webrtc/VideoFrame;)V = OnFrame(Org.Webrtc.VideoFrame)
  release()V = Release()
org/webrtc/VideoFrame = Org.Webrtc.VideoFrame
  <init>(Lorg/webrtc/VideoFrame$Buffer;IJ)V = .ctor(Org.Webrtc.VideoFrame.IBuffer, int, long)
  getBuffer()Lorg/webrtc/VideoFrame$Buffer; = Buffer
  getRotatedHeight()I = RotatedHeight
  getRotatedWidth()I = RotatedWidth
  getRotation()I = Rotation
  getTimestampNs()J = TimestampNs
  release()V = Release()
  retain()V = Retain()
org/webrtc/VideoFrameDrawer = Org.Webrtc.VideoFrameDrawer
  <init>()V = .ctor()
  TAG = Tag
  drawFrame(Lorg/webrtc/VideoFrame;Lorg/webrtc/RendererCommon$GlDrawer;)V = DrawFrame(Org.Webrtc.VideoFrame, Org.Webrtc.RendererCommon.IGlDrawer)
  drawFrame(Lorg/webrtc/VideoFrame;Lorg/webrtc/RendererCommon$GlDrawer;Landroid/graphics/Matrix;)V = DrawFrame(Org.Webrtc.VideoFrame, Org.Webrtc.RendererCommon.IGlDrawer, Android.Graphics.Matrix)
  drawFrame(Lorg/webrtc/VideoFrame;Lorg/webrtc/RendererCommon$GlDrawer;Landroid/graphics/Matrix;IIII)V = DrawFrame(Org.Webrtc.VideoFrame, Org.Webrtc.RendererCommon.IGlDrawer, Android.Graphics.Matrix, int, int, int, int)
  drawTexture(Lorg/webrtc/RendererCommon$GlDrawer;Lorg/webrtc/VideoFrame$TextureBuffer;Landroid/graphics/Matrix;IIIIII)V = DrawTexture(Org.Webrtc.RendererCommon.IGlDrawer, Org.Webrtc.VideoFrame.ITextureBuffer, Android.Graphics.Matrix, int, int, int, int, int, int)
  prepareBufferForViewportSize(Lorg/webrtc/VideoFrame$Buffer;II)Lorg/webrtc/VideoFrame$Buffer; = PrepareBufferForViewportSize(Org.Webrtc.VideoFrame.IBuffer, int, int)
  release()V = Release()
org/webrtc/VideoProcessor = Org.Webrtc.IVideoProcessor
  applyFrameAdaptationParameters(Lorg/webrtc/VideoFrame;Lorg/webrtc/VideoProcessor$FrameAdaptationParameters;)Lorg/webrtc/VideoFrame; = ApplyFrameAdaptationParameters(Org.Webrtc.VideoFrame, Org.Webrtc.VideoProcessorFrameAdaptationParameters)
  setSink(Lorg/webrtc/VideoSink;)V = SetSink(Org.Webrtc.IVideoSink)
org/webrtc/VideoSink = Org.Webrtc.IVideoSink
  onFrame(Lorg/webrtc/VideoFrame;)V = OnFrame(Org.Webrtc.VideoFrame)
org/webrtc/VideoSource = Org.Webrtc.VideoSource
  <init>(J)V = .ctor(long)
  getCapturerObserver()Lorg/webrtc/CapturerObserver; = CapturerObserver
  adaptOutputFormat(III)V = AdaptOutputFormat(int, int, int)
  adaptOutputFormat(IIIII)V = AdaptOutputFormat(int, int, int, int, int)
  adaptOutputFormat(Lorg/webrtc/VideoSource$AspectRatio;Ljava/lang/Integer;Lorg/webrtc/VideoSource$AspectRatio;Ljava/lang/Integer;Ljava/lang/Integer;)V = AdaptOutputFormat(Org.Webrtc.VideoSource.AspectRatio, Java.Lang.Integer, Org.Webrtc.VideoSource.AspectRatio, Java.Lang.Integer, Java.Lang.Integer)
  setIsScreencast(Z)V = SetIsScreencast(bool)
  setVideoProcessor(Lorg/webrtc/VideoProcessor;)V = SetVideoProcessor(Org.Webrtc.IVideoProcessor)
org/webrtc/VideoTrack = Org.Webrtc.VideoTrack
  <init>(J)V = .ctor(long)
  addSink(Lorg/webrtc/VideoSink;)V = AddSink(Org.Webrtc.IVideoSink)
  removeSink(Lorg/webrtc/VideoSink;)V = RemoveSink(Org.Webrtc.IVideoSink)
org/webrtc/voiceengine/BuildInfo = Org.Webrtc.Voiceengine.BuildInfo
  <init>()V = .ctor()
  getAndroidBuildId()Ljava/lang/String; = AndroidBuildId
  getBrand()Ljava/lang/String; = Brand
  getBuildRelease()Ljava/lang/String; = BuildRelease
  getBuildType()Ljava/lang/String; = BuildType
  getDevice()Ljava/lang/String; = Device
  getDeviceManufacturer()Ljava/lang/String; = DeviceManufacturer
  getDeviceModel()Ljava/lang/String; = DeviceModel
  getProduct()Ljava/lang/String; = Product
  getSdkVersion()I = SdkVersion
org/webrtc/voiceengine/WebRtcAudioEffects = Org.Webrtc.Voiceengine.WebRtcAudioEffects
  isAcousticEchoCancelerBlacklisted()Z = IsAcousticEchoCancelerBlacklisted
  isAcousticEchoCancelerSupported()Z = IsAcousticEchoCancelerSupported
  isNoiseSuppressorBlacklisted()Z = IsNoiseSuppressorBlacklisted
  isNoiseSuppressorSupported()Z = IsNoiseSuppressorSupported
  canUseAcousticEchoCanceler()Z = CanUseAcousticEchoCanceler()
  canUseNoiseSuppressor()Z = CanUseNoiseSuppressor()
  create()Lorg/webrtc/voiceengine/WebRtcAudioEffects; = Create()
  enable(I)V = Enable(int)
  release()V = Release()
  setAEC(Z)Z = SetAEC(bool)
  setNS(Z)Z = SetNS(bool)
org/webrtc/voiceengine/WebRtcAudioManager = Org.Webrtc.Voiceengine.WebRtcAudioManager
  isLowLatencyInputSupported()Z = IsLowLatencyInputSupported
  getStereoInput()Z = StereoInput
  setStereoInput(Z)V = StereoInput
  getStereoOutput()Z = StereoOutput
  setStereoOutput(Z)V = StereoOutput
  setBlacklistDeviceForOpenSLESUsage(Z)V = SetBlacklistDeviceForOpenSLESUsage(bool)
org/webrtc/voiceengine/WebRtcAudioRecord = Org.Webrtc.Voiceengine.WebRtcAudioRecord
  setAudioSource(I)V = SetAudioSource(int)
  setErrorCallback(Lorg/webrtc/voiceengine/WebRtcAudioRecord$WebRtcAudioRecordErrorCallback;)V = SetErrorCallback(Org.Webrtc.Voiceengine.WebRtcAudioRecord.IWebRtcAudioRecordErrorCallback)
  setMicrophoneMute(Z)V = SetMicrophoneMute(bool)
  setOnAudioSamplesReady(Lorg/webrtc/voiceengine/WebRtcAudioRecord$WebRtcAudioRecordSamplesReadyCallback;)V = SetOnAudioSamplesReady(Org.Webrtc.Voiceengine.WebRtcAudioRecord.IWebRtcAudioRecordSamplesReadyCallback)
org/webrtc/voiceengine/WebRtcAudioTrack = Org.Webrtc.Voiceengine.WebRtcAudioTrack
  setAudioTrackUsageAttribute(I)V = SetAudioTrackUsageAttribute(int)
  setErrorCallback(Lorg/webrtc/voiceengine/WebRtcAudioTrack$ErrorCallback;)V = SetErrorCallback(Org.Webrtc.Voiceengine.WebRtcAudioTrack.IErrorCallback)
  setErrorCallback(Lorg/webrtc/voiceengine/WebRtcAudioTrack$WebRtcAudioTrackErrorCallback;)V = SetErrorCallback(Org.Webrtc.Voiceengine.WebRtcAudioTrack.IWebRtcAudioTrackErrorCallback)
  setSpeakerMute(Z)V = SetSpeakerMute(bool)
org/webrtc/voiceengine/WebRtcAudioUtils = Org.Webrtc.Voiceengine.WebRtcAudioUtils
  <init>()V = .ctor()
  getBlackListedModelsForAecUsage()Ljava/util/List; = BlackListedModelsForAecUsage
  getBlackListedModelsForNsUsage()Ljava/util/List; = BlackListedModelsForNsUsage
  getDefaultSampleRateHz()I = DefaultSampleRateHz
  setDefaultSampleRateHz(I)V = DefaultSampleRateHz
  isAcousticEchoCancelerSupported()Z = IsAcousticEchoCancelerSupported
  isAutomaticGainControlSupported()Z = IsAutomaticGainControlSupported
  isDefaultSampleRateOverridden()Z = IsDefaultSampleRateOverridden
  isNoiseSuppressorSupported()Z = IsNoiseSuppressorSupported
  getThreadInfo()Ljava/lang/String; = ThreadInfo
  deviceIsBlacklistedForOpenSLESUsage()Z = DeviceIsBlacklistedForOpenSLESUsage()
  runningOnEmulator()Z = RunningOnEmulator()
  setWebRtcBasedAcousticEchoCanceler(Z)V = SetWebRtcBasedAcousticEchoCanceler(bool)
  setWebRtcBasedAutomaticGainControl(Z)V = SetWebRtcBasedAutomaticGainControl(bool)
  setWebRtcBasedNoiseSuppressor(Z)V = SetWebRtcBasedNoiseSuppressor(bool)
  useWebRtcBasedAcousticEchoCanceler()Z = UseWebRtcBasedAcousticEchoCanceler()
  useWebRtcBasedAutomaticGainControl()Z = UseWebRtcBasedAutomaticGainControl()
  useWebRtcBasedNoiseSuppressor()Z = UseWebRtcBasedNoiseSuppressor()
org/webrtc/WrappedNativeVideoDecoder = Org.Webrtc.WrappedNativeVideoDecoder
  <init>()V = .ctor()
  getImplementationName()Ljava/lang/String; = ImplementationName
  getPrefersLateDecoding()Z = PrefersLateDecoding
  createNativeVideoDecoder()J = CreateNativeVideoDecoder()
  decode(Lorg/webrtc/EncodedImage;Lorg/webrtc/VideoDecoder$DecodeInfo;)Lorg/webrtc/VideoCodecStatus; = Decode(Org.Webrtc.EncodedImage, Org.Webrtc.VideoDecoderDecodeInfo)
  initDecode(Lorg/webrtc/VideoDecoder$Settings;Lorg/webrtc/VideoDecoder$Callback;)Lorg/webrtc/VideoCodecStatus; = InitDecode(Org.Webrtc.VideoDecoderSettings, Org.Webrtc.IVideoDecoderCallback)
  release()Lorg/webrtc/VideoCodecStatus; = Release()
org/webrtc/WrappedNativeVideoEncoder = Org.Webrtc.WrappedNativeVideoEncoder
  <init>()V = .ctor()
  getImplementationName()Ljava/lang/String; = ImplementationName
  isHardwareEncoder()Z = IsHardwareEncoder
  getScalingSettings()Lorg/webrtc/VideoEncoder$ScalingSettings; = ScalingSettings
  createNativeVideoEncoder()J = CreateNativeVideoEncoder()
  encode(Lorg/webrtc/VideoFrame;Lorg/webrtc/VideoEncoder$EncodeInfo;)Lorg/webrtc/VideoCodecStatus; = Encode(Org.Webrtc.VideoFrame, Org.Webrtc.VideoEncoderEncodeInfo)
  initEncode(Lorg/webrtc/VideoEncoder$Settings;Lorg/webrtc/VideoEncoder$Callback;)Lorg/webrtc/VideoCodecStatus; = InitEncode(Org.Webrtc.VideoEncoderSettings, Org.Webrtc.IVideoEncoderCallback)
  release()Lorg/webrtc/VideoCodecStatus; = Release()
  setRateAllocation(Lorg/webrtc/VideoEncoder$BitrateAllocation;I)Lorg/webrtc/VideoCodecStatus; = SetRateAllocation(Org.Webrtc.VideoEncoderBitrateAllocation, int)
org/webrtc/YuvConverter = Org.Webrtc.YuvConverter
  <init>()V = .ctor()
  <init>(Lorg/webrtc/VideoFrameDrawer;)V = .ctor(Org.Webrtc.VideoFrameDrawer)
  convert(Lorg/webrtc/VideoFrame$TextureBuffer;)Lorg/webrtc/VideoFrame$I420Buffer; = Convert(Org.Webrtc.VideoFrame.ITextureBuffer)
  release()V = Release()
org/webrtc/YuvHelper = Org.Webrtc.YuvHelper
  <init>()V = .ctor()
  ABGRToI420(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;III)V = ABGRToI420(Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, int, int)
  copyPlane(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;III)V = CopyPlane(Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, int, int)
  I420Copy(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;II)V = I420Copy(Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, int)
  I420Copy(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;III)V = I420Copy(Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, int, int)
  I420Rotate(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;III)V = I420Rotate(Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, int, int)
  I420ToNV12(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;II)V = I420ToNV12(Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, int)
  I420ToNV12(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;III)V = I420ToNV12(Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, int, int)
